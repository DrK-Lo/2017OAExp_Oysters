mantle1[1:5,] %>% select(-c(s17099)) %>% mutate(mymean = mean)
mantle1[1:5,] %>% select(-c(s17099)) %>% mutate(mean)
mantle1[1:5,] %>% select(-c(s17099)) %>% mutate(list(mean=mean))
mantle1[1:5,] %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1))
mantle1[1:5,] %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1[1:5,]))
mantle2 <- mantle1 %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1))
head(mantle2)
mantle2$pos <- rownames(mantle)
head(mantle2)
head(mantle_pos)
mantle_pos$pos <- paste(mantle_pos$chrom, mantle_pos$chromStart, sep="_")
head(mantle_pos)
head(mantle2)
rm(mantle, mantle1)
full_join(mantle_pos, mantle2)
mantle_plot <- full_join(mantle_pos, mantle2)
head(mantle_plot)
head(genes)
#kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=1)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
#kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=1)
kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=genes,window.size = 100000, col=adjustcolor("red", 0.3), lwd=0.5, data.panel=2)
head(mantle_plot)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
kpAddCytobandsAsLine(kp)
kpLines(kp, x=mantle_plot$chromStart, y=mantle_plot$betamean, data.panel = 1)
kpLines(kp, x=mantle_plot$chromStart, y=mantle_plot$betamean, data.panel = 1, chr=mantle_plot$C)
kpLines(kp, x=mantle_plot$chromStart, y=mantle_plot$betamean, data.panel = 1, chr=mantle_plot$chrom)
beta_split <- (mantle_plot$beta, mantle_plot$chromStart)
beta_split <- (mantle_plot$beta, mantle_plot$chrom)
beta_split <- split(mantle_plot$beta, mantle_plot$chrom)
str(beta_split)
beta_split_chrom <- split(mantle_plot$beta, mantle_plot$chrom)
str(beta_split_chrom)
summ_beta <- function(x){
split(x$beta, x$chromStart)
}
beta_split_chrom <- split(mantle_plot$beta, mantle_plot$chrom)
str(beta_split_chrom)
summ_beta <- function(x){
split(x$beta, x$chromStart)
}
beta_split <- lapply(beta_split_chrom, summ_beta)
beta_pos_chrom  <- split(mantle_plot$pos, mantle_plot$chrom)
str(beta_pos_chrom)
beta_pos_chrom  <- split(mantle_plot$chromStart, mantle_plot$chrom)
str(beta_pos_chrom)
summ_beta <- function(beta, pos){
beta_split <- split(beta, pos)
}
summ_beta(beta_split_chrom[[1]], beta_pos_chrom[[1]])
return(beta_split)
summ_beta <- function(beta, pos){
beta_split <- split(beta, pos)
return(beta_split)
}
a<-
summ_beta(beta_split_chrom[[1]], beta_pos_chrom[[1]])
str(a)
?cut
10^4
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
return(beta_split)
}
a<-
summ_beta(beta_split_chrom[[1]], beta_pos_chrom[[1]])
str(a)
beta <- beta_split_chrom[[1]]
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
return(beta_split)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
lapply(beta_split, mean)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
names(a)
unlist(lapply(beta_split, mean))
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
unlist(lapply(beta_split, mean))
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
sapply(beta_split, mean)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
names(a)
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
do.call(rbind(lapply(beta_split, mean), summary))
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
do.call(rbind(lapply(beta_split), summary))
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
beta_split <- split(beta, bins)
do.call(rbind(lapply(beta_split), summary))
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
#beta_split <- split(beta, bins)
do.call(rbind(lapply(split(beta, bins)), summary))
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
summ_beta <- function(beta, pos){
bins <- cut(pos, breaks=seq(1, max(pos), by = 10^4))
#beta_split <- split(beta, bins)
do.call(rbind, lapply(split(beta, bins), summary))
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
head(a)
summ_beta <- function(beta, pos, window1=10^4){
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
out$mid <- seq(window1/2, max(pos), by = window1)
return(out)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
pos <- beta_pos_chrom[[2]]
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
window1=10^4
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
beta = beta_split_chrom[[2]]
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
str(out)
dim(out)
out <-as.data.frame(out)
str(out)
head(rownames(out))
summ_beta <- function(beta, pos, window1=10^4){
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
out2 <- as.data.frame(out)
out2$mid <- seq(window1/2, max(pos), by = window1)
out2$window <- rownames(out)
return(out2)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
out2$mid <- seq(window1/2, (max(pos)-window1/2), by = window1)
out2 <- as.data.frame(out)
out2$mid <- seq(window1/2, (max(pos)-window1/2), by = window1)
out2$window <- rownames(out)
head(out2)
tail(out)
tail(out2)
summ_beta <- function(beta, pos, window1=10^4){
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
out2 <- as.data.frame(out)
out2$mid <- seq(window1/2, (max(pos)-window1/2), by = window1)
out2$window <- rownames(out)
return(out2)
}
a<-
summ_beta(beta_split_chrom[[2]], beta_pos_chrom[[2]])
str(a)
head(a)
?kpPlotDensity
names(beta_split_chrom)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
kpAddCytobandsAsLine(kp)
kpLines(kp, x=a$mid, y=a$betamean, data.panel = 1, chr=names(beta_split_chrom[2]))
head(a)
kpLines(kp, x=a$mid, y=a$betamean, data.panel = 1, chr=names(beta_split_chrom[2]))
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[2]))
summ_beta <- function(beta, pos, window1=10^5){
bins <- cut(pos, breaks=seq(1, max(pos), by = window1))
#beta_split <- split(beta, bins)
out <- do.call(rbind, lapply(split(beta, bins), summary))
out2 <- as.data.frame(out)
out2$mid <- seq(window1/2, (max(pos)-window1/2), by = window1)
out2$window <- rownames(out)
return(out2)
}
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
kpAddCytobandsAsLine(kp)
i=2
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[2]))
names(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
kpAddCytobandsAsLine(kp)
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[2]))
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 2, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 2, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 2, chr=names(beta_split_chrom[2]))
kpAxis(kp, data.panel=1)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs, plot.type=2)
kpAddCytobandsAsLine(kp)
i=2
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[2]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[2]))
kpAxis(kp, data.panel=1)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 2, chr=names(beta_split_chrom[2]), col="grey")
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs, plot.type=2)
kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=1)
kpPlotDensity(kp, data=genes,window.size = 100000, col=adjustcolor("red", 0.3), lwd=0.5, data.panel=2) #this should plot on the bottom, but doesn't seem to work
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs, plot.type=2)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, #chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 1:length())
}}
for (i in 1:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
i
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=1, r1=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=1, r1=-1)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=-1)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=2
)
png("Mantle2018Top_ExonDensityBottom.png", width=12, height=8, units=in)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=1.5)
dev.off()
png("Mantle2018Top_ExonDensityBottom.png", width=12, height=8, units="in")
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=1.5)
dev.off()
png("Mantle2018Top_ExonDensityBottom.png", width=12, height=8, units="in", res=400)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=1.5)
dev.off()
png("Mantle2018Top_ExonDensityBottom.png", width=12, height=8, units="in", res=400)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, chromosomes=chrs,
plot.type=2)
kpAddCytobandsAsLine(kp)
for (i in 2:length(beta_split_chrom)){
a<-
summ_beta(beta_split_chrom[[i]], beta_pos_chrom[[i]])
head(a)
kpLines(kp, x=a$mid, y=a$"1st Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$"3rd Qu.", data.panel = 1, chr=names(beta_split_chrom[i]), col="grey")
kpLines(kp, x=a$mid, y=a$Mean, data.panel = 1, chr=names(beta_split_chrom[i]))
}
kpAxis(kp, data.panel=1, labels = c("", 0.5, 1))
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=2, r0=0, r1=1)
dev.off()
levels(features$type)
head(features)
if(!file.exists("_ncbi_downloads")){
gff.file <- getGFF(organism="Crassostrea virginica", gunzip=TRUE)
}
#gff.file <-"./ref_C_virginica-3.0_top_level.gff3"
gff.file <- "_ncbi_downloads/annotation/Crassostrea_virginica_genomic_refseq.gff"
header.lines <- readLines(gff.file)
#The lines with the standard chromosomes start with "##sequence-region ".
#Select them.
ll <- header.lines[grepl(header.lines, pattern = "##sequence-region ")]
#split them by space, and create a data.frame
gg <- data.frame(do.call(rbind, strsplit(ll, split = " ")))
gg[,3] <- as.numeric(as.character(gg[,3]))
gg[,4] <- as.numeric(as.character(gg[,4]))
CV.genome <- toGRanges(gg[,c(2,3,4)])
list.files("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/")
mantle <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_BetaMatrix.RData")
colnames(mantle) <- paste0("s", colnames(mantle))
head(mantle)
#mantle <- as.data.frame(mantle)
mantle1 <- data.table(mantle)
packages_needed <- c("scales", "biomartr", "rio", "tidyverse", "googledrive","data.table"
)
for (i in 1:length(packages_needed)){
if(!(packages_needed[i] %in% installed.packages())){install.packages(packages_needed[i])}
}
for (i in 1:length(packages_needed)){
library( packages_needed[i], character.only = TRUE)
}
bioc_packages_needed <- c("karyoploteR", "Biostrings", "biomaRt")
if(length(bioc_packages_needed)>0){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
for (i in 1:length(packages_needed)){
if(!(bioc_packages_needed[i] %in% installed.packages())){BiocManager::install(packages_needed[i])
}
}
}
for (i in 1:length(bioc_packages_needed)){
library(bioc_packages_needed[i], character.only = TRUE)
}
if(!file.exists("_ncbi_downloads")){
gff.file <- getGFF(organism="Crassostrea virginica", gunzip=TRUE)
}
#gff.file <-"./ref_C_virginica-3.0_top_level.gff3"
gff.file <- "_ncbi_downloads/annotation/Crassostrea_virginica_genomic_refseq.gff"
header.lines <- readLines(gff.file)
#The lines with the standard chromosomes start with "##sequence-region ".
#Select them.
ll <- header.lines[grepl(header.lines, pattern = "##sequence-region ")]
#split them by space, and create a data.frame
gg <- data.frame(do.call(rbind, strsplit(ll, split = " ")))
gg[,3] <- as.numeric(as.character(gg[,3]))
gg[,4] <- as.numeric(as.character(gg[,4]))
CV.genome <- toGRanges(gg[,c(2,3,4)])
kp <- plotKaryotype(genome=CV.genome)
kpAddCytobandsAsLine(kp)
#features_df <- read_gff(gff.file)
#head(features_df)
features <- rtracklayer::import(gff.file)
head(features)
seqnames(features)
chrs <- as.character(seqnames(features)@values[1:10])
levels(features$type)
genes <- features[features$type=="gene" ,]
exons <- features[features$type=="exon",]
#gff.file <-"./HSP.gff3"
#features <- import(gff.file)
#HSP <- features[features$type=="exon"]
#HSP <- reduce(HSP)
exons.sc <-IRanges::reduce(exons)
genes.sc <-IRanges::reduce(genes)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
kpPlotRegions(kp, data=genes)
kp <- plotKaryotype(genome=CV.genome, ideogram.plotter = NULL, plot.type=2, chromosomes = chrs)
kpAddCytobandsAsLine(kp)
kpPlotRegions(kp, data=genes[strand(genes)=="+"], avoid.overlapping = FALSE)
kpPlotRegions(kp, data=genes[strand(genes)=="-"], avoid.overlapping = FALSE, data.panel=2)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
#kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), r0=0, r1=1)
kpPlotDensity(kp, data=genes,window.size = 100000, col=adjustcolor("red", 0.3), lwd=0.5, data.panel=2, r0=0, r1=-1)
kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs, plot.type=2)
kpAddCytobandsAsLine(kp)
kpPlotDensity(kp, data=exons,window.size = 100000, col=adjustcolor("blue", 0.5), lwd=0.5, border=adjustcolor("blue", 0.5), data.panel=1)
kpPlotDensity(kp, data=genes,window.size = 100000, col=adjustcolor("red", 0.3), lwd=0.5, data.panel=2) #this should plot on the bottom, but doesn't seem to work
list.files("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/")
mantle <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_BetaMatrix.RData")
colnames(mantle) <- paste0("s", colnames(mantle))
head(mantle)
#mantle <- as.data.frame(mantle)
mantle1 <- data.table(mantle)
# data tables store data and apply functions more efficiently
head(mantle1)
mantle2 <- mantle1 %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1))
mantle2$pos <- rownames(mantle)
head(mantle2)
rm(mantle, mantle1)
mantle_pos <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_summaryTable.RData")
mantle_pos$pos <- paste(mantle_pos$chrom, mantle_pos$chromStart, sep="_")
head(mantle_pos)
mantle_counts <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_TotalCountMatrix.RData")
head(mantle_counts)
mantle_info <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/meta/metadata_20190811.Rdata")
head(mantle_info)
names(mantle_pos)[1:3] <- c("chrom", "chromStart", "chromEnd")
mantle_plot <- full_join(mantle_pos, mantle2)
head(mantle_plot)
#kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
#kpAddCytobandsAsLine(kp)
# kp
# kpLines(kp, x=mantle_plot$chromStart, y=mantle_plot$betamean, data.panel = 1, chr=mantle_plot$chrom) DO NOT DO THIS - WAAAY TO MUCH INFO TO PLOT
kpAxis(kp, data.panel=1)
mantle1 <- as.data.frame(mantle)
mantle <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_BetaMatrix.RData")
colnames(mantle) <- paste0("s", colnames(mantle))
head(mantle)
mantle1 <- as.data.frame(mantle)
mantle1 <- as.data.frame(mantle) # takes afew seconds
#mantle1 <- data.table(mantle) # gives error with dplyr functions
head(mantle1)
mantle2 <- mantle1 %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1))
ssessionInfo())
ssessionInfo()
sessionInfo()
library(dplyr)
mantle2 <- mantle1 %>% select(-c(s17099)) %>% mutate(betamean = rowMeans(mantle1))
mantle2 <- mantle1 %>% dplyr::select(-c(s17099)) %>% dplyr::mutate(betamean = rowMeans(mantle1))
mantle2 <- mantle1 %>% dplyr::select(-c(s17099)) %>% dplyr::mutate(betamean = rowMeans(mantle1))
mantle2$pos <- rownames(mantle)
head(mantle2)
rm(mantle, mantle1)
mantle_pos <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_summaryTable.RData")
mantle_pos$pos <- paste(mantle_pos$chrom, mantle_pos$chromStart, sep="_")
head(mantle_pos)
# bedfile naming system - not sure yet if this is necessary to work with ranges
mantle_pos$pos <- paste(mantle_pos$chrom, mantle_pos$chromStart, sep="_")
names(mantle_pos)[1:3] <- c("chrom", "chromStart", "chromEnd")
# bedfile naming system - not sure yet if this is necessary to work with ranges
mantle_pos$pos <- paste(mantle_pos$chrom, mantle_pos$chromStart, sep="_")
head(mantle_pos)
mantle_counts <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/DNAm/Data/CG_unstranded_TotalCountMatrix.RData")
head(mantle_counts)
mantle_info <- readRDS("~/Google Drive/LotterhosLab/2017-2020-Oyster OA Epigenetics/2017_CV_AdultExposureExp/Data/meta/metadata_20190811.Rdata")
head(mantle_info)
mantle_plot <- full_join(mantle_pos, mantle2)
head(mantle_plot)
#kp <- plotKaryotype(genome=CV.genome[1:10], ideogram.plotter = NULL, chromosomes=chrs)
#kpAddCytobandsAsLine(kp)
# kp
# kpLines(kp, x=mantle_plot$chromStart, y=mantle_plot$betamean, data.panel = 1, chr=mantle_plot$chrom) DO NOT DO THIS - WAAAY TO MUCH INFO TO PLOT
kpAxis(kp, data.panel=1)
